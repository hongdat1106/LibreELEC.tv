diff --git a/drivers/net/wireless/rockchip_wlan/ssv6xxx/Makefile b/drivers/net/wireless/rockchip_wlan/ssv6xxx/Makefile
index f86faef51b85..e1df615ef4c4 100644
--- a/drivers/net/wireless/rockchip_wlan/ssv6xxx/Makefile
+++ b/drivers/net/wireless/rockchip_wlan/ssv6xxx/Makefile
@@ -19,7 +19,7 @@ include $(KBUILD_TOP)/ssv6051.cfg
 include $(KBUILD_TOP)/platform-config.mak
 
 
-EXTRA_CFLAGS := -I$(KBUILD_TOP) -I$(KBUILD_TOP)/include
+EXTRA_CFLAGS := -I$(KBUILD_TOP) -I$(KBUILD_TOP)/include -Wno-error=missing-attributes
 DEF_PARSER_H = $(KBUILD_TOP)/include/ssv_conf_parser.h
 $(shell env ccflags="$(ccflags-y)" $(KBUILD_TOP)/parser-conf.sh $(DEF_PARSER_H))
 
diff --git a/drivers/net/wireless/rockchip_wlan/ssv6xxx/smac/dev.c b/drivers/net/wireless/rockchip_wlan/ssv6xxx/smac/dev.c
index 1b0d5707be34..34b60478d237 100644
--- a/drivers/net/wireless/rockchip_wlan/ssv6xxx/smac/dev.c
+++ b/drivers/net/wireless/rockchip_wlan/ssv6xxx/smac/dev.c
@@ -92,8 +92,6 @@ unsigned int cal_duration_of_mpdu(struct sk_buff *mpdu_skb)
  unsigned int timeout;
  SKB_info *mpdu_skb_info = (SKB_info *)mpdu_skb->head;
  timeout = (unsigned int)ktime_to_ms(ktime_sub(ktime_get(), mpdu_skb_info->timestamp));
- if (timeout > SKB_DURATION_TIMEOUT_MS)
-  printk("*mpdu_duration: %ums\n", timeout);
  return timeout;
 }
 #endif
@@ -179,7 +177,7 @@ u32 ssv6xxx_pbuf_alloc(struct ssv_softc *sc, int size, int type)
                 size, type);
     else
     {
-        dev_info(sc->dev, "Allocated %d type packet buffer of size %d (%d) at address %x.\n",
+        dev_dbg(sc->dev, "Allocated %d type packet buffer of size %d (%d) at address %x.\n",
                  type, size, page_cnt, regval);
     }
     return regval;
@@ -197,7 +195,6 @@ bool ssv6xxx_pbuf_free(struct ssv_softc *sc, u32 pbuf_addr)
     }
     mutex_lock(&sc->mem_mutex);
     regval = ((M_ENG_TRASH_CAN << HW_ID_OFFSET) |(pbuf_addr >> ADDRESS_OFFSET));
-    printk("[A] ssv6xxx_pbuf_free addr[%08x][%x]\n", pbuf_addr, regval);
     SMAC_REG_WRITE(sc->sh, ADR_CH0_TRIG_1, regval);
     if (*p_tx_page_cnt)
     {
@@ -1136,7 +1133,7 @@ static void _set_aes_tkip_hw_crypto_group_key (struct ssv_softc *sc,
     address = sec_key_tbl
               + ((index-1) * sizeof(struct ssv6xxx_hw_key));
     if (vif_info->vif_priv != NULL)
-        dev_info(sc->dev, "Write group key %d to VIF %d to %08X\n",
+        dev_dbg(sc->dev, "Write group key %d to VIF %d to %08X\n",
                  index, vif_info->vif_priv->vif_idx, address);
     else
         dev_err(sc->dev, "NULL VIF.\n");
@@ -1189,7 +1186,7 @@ static int _write_pairwise_key_to_hw (struct ssv_softc *sc,
     #if 0
     sta_info->s_flags |= STA_FLAG_ENCRYPT;
     #endif
-    dev_info(sc->dev, "Set STA %d's pair-wise key of %d bytes.\n", wsid, key_len);
+    dev_dbg(sc->dev, "Set STA %d's pair-wise key of %d bytes.\n", wsid, key_len);
     sramKey = &(sc->vif_info[vif_priv->vif_idx].sramKey);
     sramKey->sta_key[wsid].pair_key_idx = 0;
     sramKey->sta_key[wsid].group_key_idx = vif_priv->group_key_idx;
@@ -1234,7 +1231,7 @@ static int _write_group_key_to_hw (struct ssv_softc *sc,
         dev_err(sc->dev, "Setting group key to NULL VIF\n");
         return -EOPNOTSUPP;
     }
-    dev_info(sc->dev, "Setting VIF %d group key %d of length %d to WSID %d.\n",
+    dev_dbg(sc->dev, "Setting VIF %d group key %d of length %d to WSID %d.\n",
              vif_priv->vif_idx, index, key_len, wsid);
     sramKey = &(sc->vif_info[vif_priv->vif_idx].sramKey);
     vif_priv->group_key_idx = index;
@@ -1384,7 +1381,7 @@ int _set_key_wep (struct ssv_softc *sc, struct ssv_vif_priv_data *vif_priv,
         else
         {
             dev_err(sc->dev, "[Local Crypto]: Failed to initialize driver's crypto!\n");
-            dev_info(sc->dev, "[Local Crypto]: Use MAC80211's encrypter.\n");
+            dev_dbg(sc->dev, "[Local Crypto]: Use MAC80211's encrypter.\n");
             vif_priv->need_sw_decrypt = false;
             vif_priv->need_sw_encrypt = false;
             vif_priv->use_mac80211_decrypt = true;
@@ -1457,7 +1454,7 @@ static int _set_pairwise_key_tkip_ccmp (struct ssv_softc *sc, struct ssv_vif_pri
         if (((val >>4) & 0xF) != M_ENG_CPU){
             SMAC_REG_WRITE(sc->sh, ADR_RX_FLOW_DATA, ((val & 0xf) | (M_ENG_CPU<<4)
                 | (val & 0xfffffff0) <<4));
-            dev_info(sc->dev, "orginal Rx_Flow %x , modified flow %x \n", val,
+            dev_dbg(sc->dev, "orginal Rx_Flow %x , modified flow %x \n", val,
             ((val & 0xf) | (M_ENG_CPU<<4) | (val & 0xfffffff0) <<4));
         }
     }
@@ -1476,7 +1473,7 @@ static int _set_pairwise_key_tkip_ccmp (struct ssv_softc *sc, struct ssv_vif_pri
                 (sta_priv->sta_info->sta->ht_cap.ht_supported == false))
                 && (vif_priv->force_sw_encrypt == false)))
         {
-            dev_info(sc->dev, "STA %d uses HW encrypter for pairwise.\n", sta_priv->sta_idx);
+            dev_dbg(sc->dev, "STA %d uses HW encrypter for pairwise.\n", sta_priv->sta_idx);
             sta_priv->has_hw_encrypt = true;
             sta_priv->need_sw_encrypt = false;
             sta_priv->use_mac80211_decrypt = false;
@@ -1601,7 +1598,7 @@ static int _set_group_key_tkip_ccmp (struct ssv_softc *sc, struct ssv_vif_priv_d
     if (((vif_priv->vif_idx == 0) && (tkip_use_sw_cipher == false))
         || ((cipher == SSV_CIPHER_CCMP) && (sc->sh->cfg.use_wpa2_only == 1)))
     {
-        dev_info(sc->dev, "VIF %d uses HW %s cipher for group.\n", vif_priv->vif_idx, cipher_name);
+        dev_dbg(sc->dev, "VIF %d uses HW %s cipher for group.\n", vif_priv->vif_idx, cipher_name);
         #ifdef USE_MAC80211_DECRYPT_BROADCAST
         vif_priv->has_hw_decrypt = false;
         ret = -EOPNOTSUPP;
@@ -1700,7 +1697,7 @@ static int _set_group_key_tkip_ccmp (struct ssv_softc *sc, struct ssv_vif_priv_d
                 if (((val >>4) & 0xF) != M_ENG_CPU){
                     SMAC_REG_WRITE(sc->sh, ADR_RX_FLOW_DATA, ((val & 0xf) | (M_ENG_CPU<<4)
                         | (val & 0xfffffff0) <<4));
-                    dev_info(sc->dev, "orginal Rx_Flow %x , modified flow %x \n", val,
+                    dev_dbg(sc->dev, "orginal Rx_Flow %x , modified flow %x \n", val,
                     ((val & 0xf) | (M_ENG_CPU<<4) | (val & 0xfffffff0) <<4));
                 } else {
                     printk(" doesn't need to change rx flow\n");
@@ -1913,7 +1910,7 @@ static int ssv6200_set_key(struct ieee80211_hw *hw,
                                     SMAC_REG_WRITE(sc->sh, ADR_RX_FLOW_DATA,
                                         ((val & 0xf) | (M_ENG_CPU<<4)
                                          | (val & 0xfffffff0) <<4));
-                                    dev_info(sc->dev, "orginal Rx_Flow %x , modified flow %x \n",
+                                    dev_dbg(sc->dev, "orginal Rx_Flow %x , modified flow %x \n",
                                         val, ((val & 0xf) | (M_ENG_CPU<<4) | (val & 0xfffffff0) <<4));
                                 } else {
                                     printk(" doesn't need to change rx flow\n");
@@ -2997,15 +2994,15 @@ void _clean_up_crypto_skb (struct ssv_softc *sc, struct ieee80211_sta *sta)
     u32 sta_addr0_3 = *(u32 *)&sta->addr[0];
     u32 sta_addr4_5 = (u32)*(u16 *)&sta->addr[4];
     u32 removed_skb_num;
-    dev_info(sc->dev, "Clean up skb for STA %pM.\n", sta->addr);
+    dev_dbg(sc->dev, "Clean up skb for STA %pM.\n", sta->addr);
     _stop_crypto_task(sc);
     spin_lock_irqsave(&sc->crypt_st_lock, flags);
     removed_skb_num = _remove_sta_skb_from_q(sc, &sc->preprocess_q,
                                              sta_addr0_3, sta_addr4_5);
-    dev_info(sc->dev, "Removed %u MPDU from precess queue.\n", removed_skb_num);
+    dev_dbg(sc->dev, "Removed %u MPDU from precess queue.\n", removed_skb_num);
     removed_skb_num = _remove_sta_skb_from_q(sc, &sc->crypted_q,
                                              sta_addr0_3, sta_addr4_5);
-    dev_info(sc->dev, "Removed %u MPDU from encrypted queue.\n", removed_skb_num);
+    dev_dbg(sc->dev, "Removed %u MPDU from encrypted queue.\n", removed_skb_num);
     spin_unlock_irqrestore(&sc->crypt_st_lock, flags);
     _resume_crypto_task(sc);
 }
@@ -4025,7 +4022,7 @@ static int ssv6200_sta_remove(struct ieee80211_hw *hw,
             && crypto_data->priv)
         {
             crypto_data->ops->deinit(crypto_data->priv);
-            dev_info(sc->dev, "STA releases crypto OK!\n");
+            dev_dbg(sc->dev, "STA releases crypto OK!\n");
         }
         crypto_data->priv = NULL;
         crypto_data->ops = NULL;
diff --git a/drivers/net/wireless/rockchip_wlan/ssv6xxx/ssvdevice/ssvdevice.c b/drivers/net/wireless/rockchip_wlan/ssv6xxx/ssvdevice/ssvdevice.c
index d94a5f501ebb..8718d8900644 100644
--- a/drivers/net/wireless/rockchip_wlan/ssv6xxx/ssvdevice/ssvdevice.c
+++ b/drivers/net/wireless/rockchip_wlan/ssv6xxx/ssvdevice/ssvdevice.c
@@ -58,7 +58,7 @@ static char *ssv6xxx_cmd_buf;
 char *ssv6xxx_result_buf;
 extern struct ssv6xxx_cfg_cmd_table cfg_cmds[];
 extern struct ssv6xxx_cfg ssv_cfg;
-char DEFAULT_CFG_PATH[] = "/vendor/etc/firmware/ssv6051-wifi.cfg";
+char DEFAULT_CFG_PATH[] = "/etc/firmware/ssv6051/ssv6051-wifi.cfg";
 static int ssv6xxx_dbg_open(struct inode *inode, struct file *filp)
 {
     filp->private_data = inode->i_private;
